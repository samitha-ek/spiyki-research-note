/*
Copyright 2015 Samitha W. Ekanayake

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
 */

package com.spiyki.researchnote.gui;

import com.spiyki.researchnote.utils.*;
import com.spiyki.researchnote.data.*;
import java.beans.PropertyVetoException;
import java.util.ArrayList;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author  samitha_2
 */
public class SelectProjectForm extends JInternalFrame {
    MainFunctions thisFunctions;
    int[] thisPIDs;
    /** Creates new form SelectProjectForm */
    public SelectProjectForm(MainFunctions envMainFunctions) {
        initComponents();
        thisFunctions=envMainFunctions;       
        this.setLocation(160, 0);
        PopulateProjectList();        
        cmdDeleteProject.setVisible(false);
    }

    public void RefreshProjectList(){
        PopulateProjectList();
    }
    
    private void PopulateProjectList(){
        ArrayList userProjects=thisFunctions.thisUserDatabase.GetProjectsList();
        int iProjectCnt=userProjects.size();
        if(iProjectCnt>0){
            final String[] ProjectTitles=new String[iProjectCnt];
            thisPIDs=new int[iProjectCnt];
            for(int i=0;i<iProjectCnt;i++){
                ProjectTitles[i]=(String)((ArrayList)userProjects.get(i)).get(1);
                thisPIDs[i]=(Integer)((ArrayList)userProjects.get(i)).get(0);
            }
            lstProjects.setModel(new javax.swing.AbstractListModel() { 
                String[] strings = ProjectTitles;
                public int getSize() { return strings.length; }
                public Object getElementAt(int i) { return strings[i]; }
            });         
            lstProjects.setEnabled(true);            
        }else{
            lstProjects.setModel(new javax.swing.AbstractListModel() { 
                String[] strings = {"No projects created"};
                public int getSize() { return strings.length; }
                public Object getElementAt(int i) { return strings[i]; }
            });         
            lstProjects.setEnabled(false);
        }       
        RefreshButtons();
    }
    
    private void RefreshButtons(){
        if(lstProjects.isSelectionEmpty()){
            cmdEditProject.setEnabled(false);
            cmdSelectThisProject.setEnabled(false);
        }else{
            cmdEditProject.setEnabled(true);
            cmdSelectThisProject.setEnabled(true);        
        }        
    }
        
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        txtProjectDescription = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstProjects = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        cmdSelectThisProject = new javax.swing.JButton();
        cmdEditProject = new javax.swing.JButton();
        cmdBack = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtProjectDes = new javax.swing.JTextPane();
        cmdAddProject = new javax.swing.JButton();
        cmdDeleteProject = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jScrollPane2.setAutoscrolls(true);

        txtProjectDescription.setColumns(20);
        txtProjectDescription.setRows(5);
        jScrollPane2.setViewportView(txtProjectDescription);

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        setTitle("Select Project");
        setPreferredSize(new java.awt.Dimension(600, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Projects");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        lstProjects.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstProjects.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstProjectsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstProjects);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 170, 340));

        jLabel2.setText("Project Description");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, -1, -1));

        cmdSelectThisProject.setIcon(new javax.swing.ImageIcon(getClass().getResource(MainFunctions.IMAGE_PATH + "SelectProjectBut_N.jpg"))); // NOI18N
        cmdSelectThisProject.setToolTipText("Select project");
        cmdSelectThisProject.setBorder(null);
        cmdSelectThisProject.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource(MainFunctions.IMAGE_PATH + "SelectProjectBut_P.jpg"))); // NOI18N
        cmdSelectThisProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSelectThisProjectActionPerformed(evt);
            }
        });
        getContentPane().add(cmdSelectThisProject, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 80, 80));

        cmdEditProject.setIcon(new javax.swing.ImageIcon(getClass().getResource(MainFunctions.IMAGE_PATH + "EditProjectBut_N.jpg"))); // NOI18N
        cmdEditProject.setToolTipText("Edit project");
        cmdEditProject.setBorder(null);
        cmdEditProject.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource(MainFunctions.IMAGE_PATH + "EditProjectBut_P.jpg"))); // NOI18N
        cmdEditProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditProjectActionPerformed(evt);
            }
        });
        getContentPane().add(cmdEditProject, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 80, 80));

        cmdBack.setIcon(new javax.swing.ImageIcon(getClass().getResource(MainFunctions.IMAGE_PATH + "CloseWindow.jpg"))); // NOI18N
        cmdBack.setToolTipText("Exit");
        cmdBack.setBorder(null);
        cmdBack.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource(MainFunctions.IMAGE_PATH + "CloseWindow_R.jpg"))); // NOI18N
        cmdBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBackActionPerformed(evt);
            }
        });
        getContentPane().add(cmdBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 80, 80));

        txtProjectDes.setBorder(null);
        txtProjectDes.setEditable(false);
        jScrollPane3.setViewportView(txtProjectDes);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 400, 340));

        cmdAddProject.setIcon(new javax.swing.ImageIcon(getClass().getResource(MainFunctions.IMAGE_PATH + "AddProjectBut_N.jpg"))); // NOI18N
        cmdAddProject.setToolTipText("Add new project");
        cmdAddProject.setBorder(null);
        cmdAddProject.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource(MainFunctions.IMAGE_PATH + "AddProjectBut_P.jpg"))); // NOI18N
        cmdAddProject.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource(MainFunctions.IMAGE_PATH + "AddProjectBut_P.jpg"))); // NOI18N
        cmdAddProject.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource(MainFunctions.IMAGE_PATH + "AddProjectBut_P.jpg"))); // NOI18N
        cmdAddProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddProjectActionPerformed(evt);
            }
        });
        getContentPane().add(cmdAddProject, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, 80, 80));

        cmdDeleteProject.setText("Delete");
        getContentPane().add(cmdDeleteProject, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 80, 80));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource(MainFunctions.IMAGE_PATH + "ProjectSelect.jpg"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void lstProjectsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstProjectsValueChanged
// TODO add your handling code here:
    if(!lstProjects.isSelectionEmpty()){
        int iPID=thisPIDs[lstProjects.getSelectedIndex()];
        new DisplayInHTMLformat(thisFunctions.thisUserDatabase.GetProjectDescription(iPID)[1], "PLTmp", txtProjectDes);
    //    txtProjectDescription.setText(thisFunctions.thisUserDatabase.GetProjectDescription(lstProjects.getSelectedIndex()+1)[1]); 
        RefreshButtons();
    }
}//GEN-LAST:event_lstProjectsValueChanged

private void cmdSelectThisProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSelectThisProjectActionPerformed
// TODO add your handling code here:
    try{
        if(thisFunctions.thisMainWindow.CurrentProjectWindow!=null){
            thisFunctions.thisMainWindow.CurrentProjectWindow.setClosed(true);  
        }
    }catch(PropertyVetoException e){}
    thisFunctions.CurrentPID=thisPIDs[lstProjects.getSelectedIndex()];
    thisFunctions.thisMainWindow.SetTheUserInfo();
    this.setVisible(false);
    thisFunctions.thisMainWindow.actionCurrentProjectWindow();
}//GEN-LAST:event_cmdSelectThisProjectActionPerformed

private void cmdEditProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditProjectActionPerformed
// TODO add your handling code here:
    thisFunctions.thisMainWindow.actionEditProjectWindow(lstProjects.getSelectedIndex()+1);
}//GEN-LAST:event_cmdEditProjectActionPerformed

private void cmdBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBackActionPerformed
// TODO add your handling code here:
    this.setVisible(false);
}//GEN-LAST:event_cmdBackActionPerformed

private void cmdAddProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddProjectActionPerformed
// TODO add your handling code here:
    actionAddNewProject();
}//GEN-LAST:event_cmdAddProjectActionPerformed

public void actionAddNewProject(){
    LicenceMgmt thisLicTest=new LicenceMgmt();
    if(!thisLicTest.LICENSED){
        if(thisFunctions.thisUserDatabase.IfProjectCountExeedsNonLicensedLimit(thisLicTest)){
            JOptionPane optionPane = new JOptionPane();
            optionPane.showMessageDialog(null, "Limit for number of projects reached.\nPlease purchase the full version to remove this limit.", "DEMO version limit", JOptionPane.YES_OPTION);
        }else{
            JOptionPane newProjectName=new JOptionPane();
            String strProjName=newProjectName.showInputDialog(null, "Enter the new project name", "Name", JOptionPane.DEFAULT_OPTION);
            thisFunctions.thisUserDatabase.AddProject(strProjName, " ");
        }
    }else{
        JOptionPane newProjectName=new JOptionPane();
        String strProjName=newProjectName.showInputDialog(null, "Enter the new project name", "Name", JOptionPane.DEFAULT_OPTION);
        thisFunctions.thisUserDatabase.AddProject(strProjName, " ");
    }     

    RefreshProjectList();    
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdAddProject;
    private javax.swing.JButton cmdBack;
    private javax.swing.JButton cmdDeleteProject;
    private javax.swing.JButton cmdEditProject;
    private javax.swing.JButton cmdSelectThisProject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList lstProjects;
    private javax.swing.JTextPane txtProjectDes;
    private javax.swing.JTextArea txtProjectDescription;
    // End of variables declaration//GEN-END:variables

}
